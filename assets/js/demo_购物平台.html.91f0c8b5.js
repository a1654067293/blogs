"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[4483],{3462:(e,t)=>{t.A=(e,t)=>{const o=e.__vccOpts||e;for(const[e,n]of t)o[e]=n;return o}},2124:(e,t,o)=>{o.r(t),o.d(t,{comp:()=>i,data:()=>l});var n=o(3034);const r=[(0,n.Fv)('<h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1 简介</span></a></h2><p>一个购物平台，可以进行用户登录，验证用户信息，获取用户登录的购物车数据，添加商品并对购物车中的商品进行结算操作。</p><h2 id="_2-主要内容" tabindex="-1"><a class="header-anchor" href="#_2-主要内容"><span>2 主要内容</span></a></h2><ol><li>使用vue3框架，将不同拆分成不同组件并通过vue-router创建路由实例进行路由规则配置，设置二级路由及三级路由，并使用路由嵌套，将应用程序的不同模块进行代码分割，增强用户体验。</li><li>对axios请求进行二次封装，并使用async,await简化异步请求的操作，解析promise对象，将不同模块的请求拆分成对应的js文件。</li><li>使用element plus实现轮播图效果。</li><li>通过vueuse组件中的use IntersectionObserver判断用户是否进入指定视口区，并利用图片的 src属性控制图片显示，实现图片的懒加载。</li><li>通过axios请求拦截器设置token请求头，使用sessionStorage搭配setItem把用户信息存储到本地中，通过axios响应式拦截器处理token过期出现的401错误并清除本地用户数据，跳转到登录页面，对用户数据进行保护。</li></ol>',4)],a={},i=(0,o(3462).A)(a,[["render",function(e,t){return(0,n.uX)(),(0,n.CE)("div",null,r)}]]),l=JSON.parse('{"path":"/demo/%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0.html","title":"购物平台","lang":"zh-CN","frontmatter":{"title":"购物平台","icon":"object-group","order":4,"category":["作品"],"tag":["Vue3","Axios","Element Plus"],"description":"1 简介 一个购物平台，可以进行用户登录，验证用户信息，获取用户登录的购物车数据，添加商品并对购物车中的商品进行结算操作。 2 主要内容 使用vue3框架，将不同拆分成不同组件并通过vue-router创建路由实例进行路由规则配置，设置二级路由及三级路由，并使用路由嵌套，将应用程序的不同模块进行代码分割，增强用户体验。 对axios请求进行二次封装，并...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blogs/demo/%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0.html"}],["meta",{"property":"og:site_name","content":"Cang Ran"}],["meta",{"property":"og:title","content":"购物平台"}],["meta",{"property":"og:description","content":"1 简介 一个购物平台，可以进行用户登录，验证用户信息，获取用户登录的购物车数据，添加商品并对购物车中的商品进行结算操作。 2 主要内容 使用vue3框架，将不同拆分成不同组件并通过vue-router创建路由实例进行路由规则配置，设置二级路由及三级路由，并使用路由嵌套，将应用程序的不同模块进行代码分割，增强用户体验。 对axios请求进行二次封装，并..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Cang Ran"}],["meta",{"property":"article:tag","content":"Vue3"}],["meta",{"property":"article:tag","content":"Axios"}],["meta",{"property":"article:tag","content":"Element Plus"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"购物平台\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cang Ran\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1 简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2 主要内容","slug":"_2-主要内容","link":"#_2-主要内容","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.11,"words":334},"filePathRelative":"demo/购物平台.md","excerpt":"<h2>1 简介</h2>\\n<p>一个购物平台，可以进行用户登录，验证用户信息，获取用户登录的购物车数据，添加商品并对购物车中的商品进行结算操作。</p>\\n<h2>2 主要内容</h2>\\n<ol>\\n<li>使用vue3框架，将不同拆分成不同组件并通过vue-router创建路由实例进行路由规则配置，设置二级路由及三级路由，并使用路由嵌套，将应用程序的不同模块进行代码分割，增强用户体验。</li>\\n<li>对axios请求进行二次封装，并使用async,await简化异步请求的操作，解析promise对象，将不同模块的请求拆分成对应的js文件。</li>\\n<li>使用element plus实现轮播图效果。</li>\\n<li>通过vueuse组件中的use IntersectionObserver判断用户是否进入指定视口区，并利用图片的 src属性控制图片显示，实现图片的懒加载。</li>\\n<li>通过axios请求拦截器设置token请求头，使用sessionStorage搭配setItem把用户信息存储到本地中，通过axios响应式拦截器处理token过期出现的401错误并清除本地用户数据，跳转到登录页面，对用户数据进行保护。</li>\\n</ol>","autoDesc":true}')}}]);